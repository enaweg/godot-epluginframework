name: Release
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version_override:
        description: "version"
        type: string
        default: "vx.x"
        required: true

jobs:
  tag-version:
    if: ${{ inputs.version_override }}
    runs-on: ubuntu-latest
    steps:
      - name: Tag version


  draft-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize version
        shell: bash
        run: |
          echo "VERSION=$( (git describe --tags --exact-match HEAD || git rev-parse --short HEAD) | sed 's/\(.*\)-\(.*\)/\1.\2/g' )" >> "$GITHUB_ENV"

      - name: Create artifact
        shell: bash
        run: |
          mkdir out/
          git archive --output="out/eplugin-framework_${VERSION}.zip" ${{ github.ref }}

      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@{latest-release}
        with:
          mode: "COMMIT"
          configurationJson: |
           {
              "template": "#{{CHANGELOG}}",
              "categories": [
                {
                    "title": "## Feature",
                    "labels": ["feat", "feature"]
                },
                {
                    "title": "## Fix",
                    "labels": ["fix", "bug"]
                },
                {
                    "title": "## Other",
                    "labels": []
                }
              ],
              "ignore_labels": [
                "ignore"
              ],
              "label_extractor": [
                {
                  "pattern": "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
                  "on_property": "title",
                  "target": "$1"
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref }}
          name: ${{ env.VERSION }}
          body: ${{ steps.build_changelog.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          artifacts: "out/eplugin-framework_${{ env.VERSION }}.zip"

      